@*本视图用于演示支持Base_Article分页显示表格数据的方法*@
@using Jurassic.Com.Tools;
@using Jurassic.CommonModels.Articles;
@using Jurassic.CommonModels;
@using Jurassic.WebRepeater;
@model Jurassic.AppCenter.Pager<Base_CatalogArticle>
@{
    ViewBag.Title = "留言板";

    //如果是ajax请求，则无需返回布局页中的无关内容
    if (IsAjax)
    {
        this.Layout = null;
    }
    var baseController = ViewContext.Controller as BaseController;
    int catId = baseController.CatalogId;

    ViewData["catId"] = catId;
}

@helper GetHeaderTempalte()
{
    <tr>
        <th class="center" style="width:20px;">
            <label class="position-relative">
                <input type="checkbox" id="repeater1_chkAll" />
                <span class="lbl"></span>
            </label>
        </th>
        <th>ID</th>
        <th>标题</th>
        <th>
            创建日期
        </th>
        @foreach (var catExt in SiteManager.Catalog.GetAllExts((int)ViewData["catId"]))
        {
            <th>@catExt.Name</th>
        }
    </tr>
}

@helper GetItemTemplate(object obj)
{
    var art = obj as Base_CatalogArticle;
    <tr>
        <td class="center" style="width:20px;">
            <label class="position-relative">
                <input type="checkbox" value="@art.Id" name="repeater1_chk" />
                <input type="hidden" value="@art.CatalogId" name="CatalogId" />
                <span class="lbl"></span>
            </label>
        </td>
        <td>@art.Id</td>
        <td>
            <a href="@Url.Action("Edit", new { caid = art.Id })" target="_blank" title="点击预览">@art.Article.Title</a>
        </td>
        <td>
            @CommOp.ToTimeStr(art.Article.CreateTime)
        </td>
        @foreach (var catExt in SiteManager.Catalog.GetAllExts((int)ViewData["catId"]))
        {
            <td>@art.GetExt(catExt.Id)</td>
        }
    </tr>
}

<div class="col-md-12">
    @Html.Repeater(new RepeaterFormData
        {
            Id = "repeater1",
            HeaderTemplate = GetHeaderTempalte,
            ItemTemplate = GetItemTemplate,
        })
</div>
<div class="mini-panel" title="批量新增数据"
     style="width:100%">
    <p>
        给留言板批量新增数据。演示SignalRProcessFactory的后台操作和向前台报告处理进度。
    </p>
</div>

<div>
    数据增加进度：<div id="progressbar" class="mini-progressbar"></div>
    耗时: <span id="cost"></span>秒
</div>

<div>
    批量新增<input type="text" class="mini-textbox" name="count" />条数据<a class="mini-button frame-submit">EF方式增加数据</a><a class="mini-button frame-submit">SQL方式增加数据</a>
    <a class="mini-button frame-submit">停止新增</a>
</div>
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-1.1.4.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>


<script type="text/javascript">
    mini.parse();
    var catId = @catId;
    //在此处声明所有操作完成后，统一发生的事件
    $('form').bind('afterSubmit', function (ajax) {
        if (ajax.button == '删除')
        {
            location.reload();
        }
    });
    $('#repeater1').bind("dblclick", function(){
        edit();
    });

    function edit() {
        var id = $('#repeater1').getCurrentId();
        if (id) {
            mini.open({
                url: "@Url.Action("Edit")" + "?caid=" + id,
                title: "@ResHelper.GetStr("Edit")",
                width: 720,
                height: 500
            });

        } else {
            alert("@ResHelper.GetStr("Please select a record")");
        }
    }

    function addNew() {
        mini.open({
            url: "@Url.Action("Edit")" + "?catId=" + catId,
            title: "@ResHelper.GetStr("New")",
            width: 720,
            height: 500
        });
    }

    $.regButton({
        text: "编辑",
        noSubmit: edit
    });

    $.regButton({
        text: "新增",
        noSubmit: addNew
    });

    $.regButton({
        text: "删除",
        beforeSubmit: function (ajax) {
            var ids = $('#repeater1').getSelectedIds();
            if (ids.length == 0) {
                alert("@ResHelper.GetStr("请选择要删除的行")");
                return false;
            }
            if (!confirm("@ResHelper.GetStr("确定删除？")")) {
                return false;
            }
            ajax.data = { ids: ids }
        },
        afterSubmit:function(){
            location.reload();
        }
    });

    $.regButton({
        text: 'EF方式增加数据',
        beforeSubmit: function(ajax) {
            ajax.url = '@Url.Action("AddNoteBookTest", new { SqlOrEf = "ef" })';
            ajax.SqlOrEF = "ef";
        },
    });

    $.regButton({
        text: 'SQL方式增加数据',
        beforeSubmit: function(ajax) {
            ajax.url = '@Url.Action("AddNoteBookTest",new {SqlOrEf="sql"})';
        },
    });

    $.regButton({
        text: '停止新增',
        beforeSubmit: function(ajax) {
            ajax.url = '@Url.Action("StopAddNoteBookTest")';
        },
    });

    $(function () {
        // Declare a proxy to reference the hub.
        var procHub = $.connection.processerHub;

        function init() {
            procHub.server.addGroup("NoteBookTest");
        }

        // Add a client-side hub method that the server will call
        //更新进度条的前台方法
        procHub.client.reportMyProgress = function (data) {
            mini.get("#progressbar").setValue(data.proc);
            $('#cost').html(data.cost);
        }

        //完成后执行的方法
        procHub.client.done=function() {
            mini.get("#progressbar").setValue(100);
            //location.reload();//在数据添加完成后重新加载页面
        }

        // Start the connection
        $.connection.hub.start().done(init);
    });
</script>
