@{    
    //ViewBag.ShowSearchBox = false;
    Layout = "~/Views/Shared/_Layout.cshtml";    
}
<div style="width: 560px; height: 400px; padding-top: 5px;">

    <div id="datagrid1" class="mini-datagrid" style="width: 555px; height: 400px; margin-left: 5px;"
        idfield="id"
        allowresize="false" showpageinfo="false" showreloadbutton="false" showpagerbuttontext="false" showpagesize="false" sizelist="[20,30,50,100]" showpageindex="false" pagesize="20"
        allowcelledit="true" allowcellselect="true" allowcolumnsort="false">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div field="name" allowresize="false" width="130" headeralign="center">参数名称</div>
            <div field="value" width="200">参数值</div>
        </div>
    </div>
    <div style="display: none;">
        <input class="mini-textbox" id="textboxEditor" />
        <input class="mini-spinner" id="spinnerEditor" />
        <input class="mini-datepicker" id="datepickerEditor" />
        <input class="mini-timespinner" id="timeEditor" />
        <input class="mini-combobox" id="selectvalueEditor" />
    </div>

    <div style="float:right; margin-top: 3px; padding-right: 2px;">
        <a class="mini-button" onclick="saveParaData()">保 存</a>
        <a class="mini-button " onclick="CloseWindow('false')" id="BtnClose">关 闭</a>
    </div>
</div>
<script type="text/javascript">
    mini.parse();
    var BOID;
    var NS;
    var BOTID;
    var grid = mini.get('datagrid1');
    var comboNS = mini.get('comboNS');
    var $selectvalueEditor = mini.get('selectvalueEditor');

    grid.on("drawcell", function (e) {
        if (e.field == "value") {
            var record = e.record;
            e.cellHtml = !mini.isNull(record.text) ? record.text : record.value;
        }
    });

    function getEditor(record) {
        var id = record.editor + "Editor";
        var editor = mini.get(id);
        return editor;
    }
    grid.on("cellbeginedit", function (e) {
        //if (e.field == "value") {
        //    var editor = getEditor(e.record);
        //    e.editor = editor;
        //    e.column.editor = editor;
        //}
        var record = e.record;  
        var ParaName;
        var record = grid.getSelected();
        if (e.field == "value") {
            var editor = getEditor(e.record);
            e.editor = editor;
            e.column.editor = editor;
            if (editor.id == "selectvalueEditor") {
                if (record) {                 
                    ParaName = record.name;
                    $selectvalueEditor.load('@Url.Action("GetParaValue")' + "?BOTID=" + BOTID + "&NS=" + escape(NS) + "&ParaName=" + escape(ParaName));
                    }
                }
        }

    });
    grid.on("cellcommitedit", function (e) {
        var record = e.record;
        if (e.field == "value") {
            var format = e.record.format;
            if (format) {
                e.value = mini.formatDate(e.value, format);
            }
        }

        if (e.editor.getText) {
            record.text = e.editor.getText();
        } else {
            record.text = e.value;
        }

    });
    function SetData(data) {
        BOID = data.BOID;
        NS = data.NS;
        BOTID = data.BOTID;
        grid.setUrl('@Url.Action("GetEditParaInfo")' + "?BOID=" + BOID + "&NS=" + escape(NS));
        grid.load();

    }
    //保存当前对象参数信息
    function saveParaData() {
        var data = grid.data;
        var json = mini.encode(data);

        mini.mask({
            el: document.body,
            cls: 'mini-mask-loading',
            html: '保存中，请稍后......'
        });
        $.ajax({
            url: '@Url.Action("SaveBOPara")',
            data: { data: json, BOID: BOID, NS: NS },
            type: "post",
            success: function (text) {
                mini.unmask(document.body);
                if (text == "True")
                    alert('保存成功！');
                else
                    alert('保存失败！');

            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            }
        });
    }

    function CloseWindow(action) {
        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
        else window.close();
    }

    function onCancel(e) {
        CloseWindow("cancel");
    }
</script>
