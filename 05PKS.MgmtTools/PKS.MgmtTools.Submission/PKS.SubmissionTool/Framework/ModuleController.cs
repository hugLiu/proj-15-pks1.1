//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add Business Module" recipe.
//
// This class contains placeholder methods for the common module initialization 
// tasks, such as adding services, or user-interface element
//
//  
//
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Drawing;
using System.Windows.Forms;
using Infragistics.Win;
using Infragistics.Win.UltraWinTabs;
//using Infragistics.Practices.CompositeUI.WinForms;
using Infragistics.Win.UltraWinToolbars;
using Jurassic.AppCenter.SmartClient.Infrastructure.Interface;
using Jurassic.AppCenter.SmartClient.Infrastructure.Shell;
using PKS.SubmissionTool.Index;
using PKS.Utils;

namespace PKS.SubmissionTool
{
    public class ModuleController : WorkItemController
    {
        public override void Run()
        {
            var shell = this.MdiTabSpace.MdiParent.As<ShellForm>();
            shell.Text = "PKS之Excel批量提交工具";
            shell.ToolbarsManager.Visible = false;
            shell.ToolbarsManager.Ribbon.DisplayMode = RibbonDisplayMode.TabsOnly;
            var minShellSize = new Size(1200, 700);
            if (shell.Width < minShellSize.Width) shell.Width = minShellSize.Width;
            if (shell.Height < minShellSize.Height) shell.Height = minShellSize.Height;
            shell.StartPosition = FormStartPosition.CenterScreen;
            //shell.WindowState = FormWindowState.Maximized;

            this.MdiTabSpace.TabSettings.DisplayFormIcon = DefaultableBoolean.False;
            this.MdiTabSpace.TabSettings.TabWidth = 150;
            this.MdiTabSpace.TabSettings.TabAppearance.TextHAlign = HAlign.Center;
            this.MdiTabSpace.TabSettings.TabAppearance.TextVAlign = VAlign.Middle;
            this.MdiTabSpace.TabSettings.CloseButtonVisibility = TabCloseButtonVisibility.Never;
            //var ribbon = this.RibbonSpace.Ribbon;
            //var windowTab = ribbon.Tabs.Cast<RibbonTab>().FirstOrDefault(e => e.Key == "Shell.Window");
            //ribbon.Tabs.Remove(windowTab);
            CreateAndActivateChildForm<frmIndexSubmission>(nameof(frmIndexSubmission));
            //ShowChildForm(form);
        }
    }
}
